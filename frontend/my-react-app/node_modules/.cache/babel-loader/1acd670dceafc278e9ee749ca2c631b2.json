{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../utils/axiosConfig';\nexport const fetchQuestions = createAsyncThunk('diagnostic/fetchQuestions', async () => {\n  const response = await axios.get('/questions');\n  return response.data; // Retourne les questions\n});\nexport const submitDiagnostic = createAsyncThunk('diagnostic/submitDiagnostic', async responses => {\n  const response = await axios.post('/submit', responses);\n  return response.data; // Retourne la réponse du backend après soumission\n});\nconst diagnosticSlice = createSlice({\n  name: 'diagnostic',\n  initialState: {\n    questions: [],\n    responses: [],\n    loading: false,\n    error: null,\n    submissionStatus: null\n  },\n  reducers: {\n    // Ajout ou modification de la réponse à une question\n    setAnswer: (state, action) => {\n      const {\n        questionId,\n        answer\n      } = action.payload;\n      const existingResponse = state.responses.find(resp => resp.questionId === questionId);\n      if (existingResponse) {\n        existingResponse.answer = answer;\n      } else {\n        state.responses.push({\n          questionId,\n          answer\n        });\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchQuestions.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchQuestions.fulfilled, (state, action) => {\n      state.loading = false;\n      state.questions = action.payload;\n    }).addCase(fetchQuestions.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(submitDiagnostic.pending, state => {\n      state.loading = true;\n      state.submissionStatus = null;\n    }).addCase(submitDiagnostic.fulfilled, (state, action) => {\n      state.loading = false;\n      state.submissionStatus = 'success';\n    }).addCase(submitDiagnostic.rejected, (state, action) => {\n      state.loading = false;\n      state.submissionStatus = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  setAnswer\n} = diagnosticSlice.actions;\nexport default diagnosticSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchQuestions","response","get","data","submitDiagnostic","responses","post","diagnosticSlice","name","initialState","questions","loading","error","submissionStatus","reducers","setAnswer","state","action","questionId","answer","payload","existingResponse","find","resp","push","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["/Users/donyab/Downloads/Hackathon/frontend/my-react-app/src/redux/slices/diagnosticSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../utils/axiosConfig';\n\n\nexport const fetchQuestions = createAsyncThunk(\n    'diagnostic/fetchQuestions',\n    async () => {\n        const response = await axios.get('/questions');\n        return response.data; // Retourne les questions\n    }\n);\n\n\nexport const submitDiagnostic = createAsyncThunk(\n    'diagnostic/submitDiagnostic',\n    async (responses) => {\n        const response = await axios.post('/submit', responses);\n        return response.data; // Retourne la réponse du backend après soumission\n    }\n);\n\n\nconst diagnosticSlice = createSlice({\n    name: 'diagnostic',\n    initialState: {\n        questions: [],\n        responses: [],\n        loading: false,\n        error: null,\n        submissionStatus: null\n    },\n    reducers: {\n        // Ajout ou modification de la réponse à une question\n        setAnswer: (state, action) => {\n            const { questionId, answer } = action.payload;\n            const existingResponse = state.responses.find((resp) => resp.questionId === questionId);\n            if (existingResponse) {\n                existingResponse.answer = answer;\n            } else {\n                state.responses.push({ questionId, answer });\n            }\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchQuestions.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(fetchQuestions.fulfilled, (state, action) => {\n                state.loading = false;\n                state.questions = action.payload;\n            })\n            .addCase(fetchQuestions.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.error.message;\n            })\n            .addCase(submitDiagnostic.pending, (state) => {\n                state.loading = true;\n                state.submissionStatus = null;\n            })\n            .addCase(submitDiagnostic.fulfilled, (state, action) => {\n                state.loading = false;\n                state.submissionStatus = 'success';\n            })\n            .addCase(submitDiagnostic.rejected, (state, action) => {\n                state.loading = false;\n                state.submissionStatus = 'failed';\n                state.error = action.error.message;\n            });\n    }\n});\n\n\nexport const { setAnswer } = diagnosticSlice.actions;\n\n\nexport default diagnosticSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
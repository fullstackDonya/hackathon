{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../utils/axiosConfig';\n\n// Action pour récupérer uniquement la liste des utilisateurs connectés\nexport const fetchConnectedUsers = createAsyncThunk(\"users/fetchConnectedUsers\", async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    token\n  } = getState().auth;\n  if (!token) {\n    return rejectWithValue(\"Utilisateur non connecté\");\n  }\n  try {\n    const response = await axios.get(`/connected`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Erreur serveur\");\n  }\n});\n\n// Action pour récupérer la liste es utilisateurs\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('/users');\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Erreur serveur');\n  }\n});\nexport const fetchProfessionalUsers = createAsyncThunk('users/fetchProfessionalUsers', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('/users');\n    const professionalRoles = ['psychologue', 'médecin', 'coach en gestion du stress', 'thérapeute'];\n    const professionalUsers = response.data.filter(user => professionalRoles.includes(user.role) && user.role !== 'user' && user.role !== 'admin' && user.role);\n    return professionalUsers;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const register = createAsyncThunk(\"auth/register\", async (user, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"/register\", user);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: {\n    list: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      state.loading = true;\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.loading = false;\n      state.list = action.payload;\n    }).addCase(fetchConnectedUsers.pending, state => {\n      state.loading = true;\n    }).addCase(fetchConnectedUsers.fulfilled, (state, action) => {\n      state.loading = false;\n      state.connectedUsers = action.payload;\n    }).addCase(fetchConnectedUsers.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchProfessionalUsers.pending, state => {\n      state.loading = true;\n    }).addCase(fetchProfessionalUsers.fulfilled, (state, action) => {\n      state.loading = false;\n      state.list = action.payload;\n    }).addCase(fetchProfessionalUsers.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchConnectedUsers","_","getState","rejectWithValue","token","auth","response","get","headers","Authorization","data","error","_error$response","fetchUsers","_error$response2","fetchProfessionalUsers","professionalRoles","professionalUsers","filter","user","includes","role","register","post","usersSlice","name","initialState","list","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","connectedUsers","rejected","reducer"],"sources":["/Users/donyab/Downloads/Hackathon/frontend/my-react-app/src/redux/slices/usersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../utils/axiosConfig';\n\n// Action pour récupérer uniquement la liste des utilisateurs connectés\nexport const fetchConnectedUsers = createAsyncThunk(\n  \"users/fetchConnectedUsers\",\n  async (_, { getState, rejectWithValue }) => {\n    const { token } = getState().auth; \n    \n    if (!token) {\n      return rejectWithValue(\"Utilisateur non connecté\");\n    }\n\n    try {\n      const response = await axios.get(`/connected`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || \"Erreur serveur\");\n    }\n  }\n);\n\n\n// Action pour récupérer la liste es utilisateurs\nexport const fetchUsers = createAsyncThunk(\n  'users/fetchUsers',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get('/users');\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || 'Erreur serveur');\n    }\n  }\n);\n\nexport const fetchProfessionalUsers = createAsyncThunk(\n  'users/fetchProfessionalUsers',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get('/users');\n      const professionalRoles = ['psychologue', 'médecin', 'coach en gestion du stress', 'thérapeute'];\n      const professionalUsers = response.data.filter(user => \n        professionalRoles.includes(user.role) && user.role !== 'user' && user.role !== 'admin' && user.role\n      );\n      return professionalUsers;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (user, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\"/register\", user);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: {\n    list: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUsers.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchUsers.fulfilled, (state, action) => {\n        state.loading = false;\n        state.list = action.payload;\n      })\n      .addCase(fetchConnectedUsers.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchConnectedUsers.fulfilled, (state, action) => {\n        state.loading = false;\n        state.connectedUsers = action.payload;\n      })\n      .addCase(fetchConnectedUsers.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(fetchUsers.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(fetchProfessionalUsers.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchProfessionalUsers.fulfilled, (state, action) => {\n        state.loading = false;\n        state.list = action.payload;\n      })\n      .addCase(fetchProfessionalUsers.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport default usersSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/donyab/Downloads/Hackathon/frontend/my-react-app/src/components/Posts/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchPosts, deletePost } from \"../../redux/slices/postsSlice\";\nimport \"./css/Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(state => state.posts.list);\n  const loading = useSelector(state => state.posts.loading);\n  const error = useSelector(state => state.posts.error);\n  const [loadingImages, setLoadingImages] = useState({});\n  const handleImageLoad = id => {\n    setLoadingImages(prevState => ({\n      ...prevState,\n      [id]: false // Indique que l'image est chargée\n    }));\n  };\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  const handleEdit = id => {\n    navigate(`/edit_post/${id}`);\n  };\n  const handleGet = id => {\n    navigate(`/post/${id}`);\n  };\n  const handleDelete = id => {\n    if (window.confirm(\"Voulez-vous vraiment supprimer cette recette ?\")) {\n      dispatch(deletePost(id)).then(() => {\n        alert(\"Recette supprimée avec succès !\");\n        dispatch(fetchPosts()); // Re-fetch posts after deletion\n      }).catch(error => {\n        console.error(\"Erreur lors de la suppression de la recette\", error);\n      });\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Erreur : \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 16\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), post.images && post.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-images\",\n          children: post.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: loadingImages[post._id] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Chargement de l'image...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this) // Indicateur de chargement\n            : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/uploads/${image}`,\n              alt: `Image ${index + 1}`,\n              className: \"post-image\",\n              onLoad: () => handleImageLoad(post._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"get\",\n          onClick: () => handleGet(post._id),\n          children: \"Voir plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"qvTKfXORHenlOebgmvttJauq+90=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","fetchPosts","deletePost","jsxDEV","_jsxDEV","Posts","_s","dispatch","navigate","posts","state","list","loading","error","loadingImages","setLoadingImages","handleImageLoad","id","prevState","handleEdit","handleGet","handleDelete","window","confirm","then","alert","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","createdAt","images","length","className","image","index","_id","src","alt","onLoad","onClick","_c","$RefreshReg$"],"sources":["/Users/donyab/Downloads/Hackathon/frontend/my-react-app/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchPosts, deletePost } from \"../../redux/slices/postsSlice\";\nimport \"./css/Posts.css\";\n\nconst Posts = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector((state) => state.posts.list);\n  const loading = useSelector((state) => state.posts.loading);\n  const error = useSelector((state) => state.posts.error);\n  const [loadingImages, setLoadingImages] = useState({});\n\n  const handleImageLoad = (id) => {\n    setLoadingImages((prevState) => ({\n      ...prevState,\n      [id]: false, // Indique que l'image est chargée\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleEdit = (id) => {\n    navigate(`/edit_post/${id}`);\n  };\n\n  const handleGet = (id) => {\n    navigate(`/post/${id}`);\n  };\n\n  const handleDelete = (id) => {\n    if (window.confirm(\"Voulez-vous vraiment supprimer cette recette ?\")) {\n      dispatch(deletePost(id))\n        .then(() => {\n          alert(\"Recette supprimée avec succès !\");\n          dispatch(fetchPosts()); // Re-fetch posts after deletion\n        })\n        .catch((error) => {\n          console.error(\"Erreur lors de la suppression de la recette\", error);\n        });\n    }\n  };\n\n  if (loading) {\n    return <div>Chargement...</div>;\n  }\n\n  if (error) {\n    return <div>Erreur : {error}</div>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post._id}>\n            <p><strong>{post.title}</strong> </p>\n            <p>{post.createdAt}</p>\n            \n            {post.images && post.images.length > 0 && (\n              <div className=\"post-images\">\n                {post.images.map((image, index) => (\n                  <div key={index}>\n                    {loadingImages[post._id] ? (\n                      <div>Chargement de l'image...</div> // Indicateur de chargement\n                    ) : (\n                      <img\n                        src={`/uploads/${image}`}\n                        alt={`Image ${index + 1}`}\n                        className=\"post-image\"\n                        onLoad={() => handleImageLoad(post._id)}\n                      />\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n            <button className=\"get\" onClick={() => handleGet(post._id)}>Voir plus</button>\n            {/* Les boutons Modifier et Supprimer */}\n            {/* <button className=\"update\" onClick={() => handleEdit(post._id)}>Modifier</button>\n            <button className=\"delete\" onClick={() => handleDelete(post._id)}>Effacer</button> */}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}